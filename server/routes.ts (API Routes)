import type { Express } from "express";
import { createServer } from "http";
import { storage } from "./storage";
import { chatRequestSchema } from "../shared/schema";
import { getChatResponse } from "./huggingface";
import cors from "cors";

export async function registerRoutes(app: Express) {
  app.use(cors());

  app.post("/api/chat", async (req, res) => {
    try {
      const result = chatRequestSchema.safeParse(req.body);
      if (!result.success) {
        return res.status(400).json({ error: "Invalid request" });
      }

      const { prompt } = result.data;
      const response = await getChatResponse(prompt);
      const message = await storage.createMessage({ prompt, response });

      res.json({ success: true, message });
    } catch (error) {
      console.error("Chat error:", error);
      res.status(500).json({ error: "Failed to process chat request" });
    }
  });

  app.get("/api/messages", async (_req, res) => {
    try {
      const messages = await storage.getMessages();
      res.json({ success: true, messages });
    } catch (error) {
      res.status(500).json({ error: "Failed to fetch messages" });
    }
  });

  return createServer(app);
}
